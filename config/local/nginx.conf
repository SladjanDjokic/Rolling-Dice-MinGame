user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log debug;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile        on;

    client_body_buffer_size 100K;
    client_header_buffer_size 10k;
    client_max_body_size 20m;
    large_client_header_buffers 2 1k;

    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout  65;
    send_timeout 10;

    proxy_cache_path /data/nginx/cache/sessions  keys_zone=sessions:1m     inactive=60d levels=1:2;
    proxy_cache_path /data/nginx/cache/avatar    keys_zone=avatar_cache:1m inactive=60d levels=1:2;
    proxy_cache_path /data/nginx/cache/s3        keys_zone=s3cache:10m     inactive=60d levels=1:2;

    gzip  on;
    index index.html;

    ##########################################################################################
    # Variables
    ##########################################################################################

    map $remote_addr $proxy_forwarded_elem {
        # IPv4 addresses can be sent as-is
        ~^[0-9.]+$          "for=$remote_addr";

        # IPv6 addresses need to be bracketed and quoted
        ~^[0-9A-Fa-f:.]+$   "for=\"[$remote_addr]\"";

        # Unix domain socket names cannot be represented in RFC 7239 syntax
        default             "for=unknown";
    }

    map $http_forwarded $proxy_add_forwarded {
        # If the incoming Forwarded header is syntactically valid, append to it
        "~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";

        # Otherwise, replace it
        default "$proxy_forwarded_elem";
    }

    map $http_cloudfront_forwarded_proto $proxy_scheme {
        https 1;
        default "$scheme";
    }

    map $proxy_add_forwarded $proxy_complete_forwarded {
        default "$proxy_add_forwarded;proto=$proxy_scheme;host=$host";
    }

    ##########################################################################################
    # Caching
    ##########################################################################################

    map $sent_http_content_type $expires {
        default                    off;
        ~image/                    max;
    }

    ##########################################################################################
    # Upstreams
    ##########################################################################################

    upstream @amera-web-share {
        server amera-web-share:3000;
        server host.docker.internal:3000;
    }

    upstream @amera-web-main {
        server amera-web-main:5001;
    }

    upstream @amera-web-api {
        server amera-web-api:5000;
    }

    upstream @amera-web-auth {
        server amera-web-auth:5000;
    }

    upstream @amera-web-notifications {
        server amera-eventserver:4000;
        server amera-web-notifications:5070;
    }

    upstream @amera-signaling {
        server amera-signaling:8080;
    }

    upstream @amera-prosody {
        server amera-prosody:5280;
    }

    ##########################################################################################
    # Server conf
    ##########################################################################################

    server {
        listen       9000;

        include locations.conf;
    }

    server {
        listen  [::]:443 ssl http2 ipv6only=on; 
        listen       443 ssl http2; 
        server_name share.dev.amera.local;

        ssl_certificate /certs/dev.crt;
        ssl_certificate_key /certs/dev.key;

        location / {
            proxy_pass http://localhost:9000;

            client_max_body_size  1000000m;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;

            proxy_redirect        off;
            proxy_set_header      Host $host;
            proxy_set_header      X-Real-IP $remote_addr;
            proxy_set_header      Forwarded $proxy_complete_forwarded;
            proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header      X-Forwarded-Host $server_name;
            proxy_set_header      X-Forwarded-Host-Original $http_x_forwarded_host;
            proxy_set_header      X-Forwarded-Proto $proxy_scheme;
        }
    }
}
