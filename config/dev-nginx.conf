user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log debug;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile        on;

    client_body_buffer_size 100K;
    client_header_buffer_size 10k;
    client_max_body_size 20m;
    large_client_header_buffers 2 1k;

    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout  65;
    send_timeout 10;

    proxy_cache_path /data/nginx/cache keys_zone=s3cache:10m inactive=60m levels=1:2;

    gzip  on;
    index index.html;

    ##########################################################################################
    # Caching
    ##########################################################################################

    map $sent_http_content_type $expires {
        default                    off;
        ~image/                    max;
    }

    ##########################################################################################
    # Upstreams
    ##########################################################################################

    upstream @amera-web-share {
        # server amera-web-share:3000;
        server host.docker.internal:3000;
    }

    upstream @amera-web-main {
        server amera-web-main:5001;
    }

    upstream @amera-web-api {
        server amera-web-api:5000;
    }

    upstream @amera-web-auth {
        server amera-web-auth:5000;
    }

    upstream @amera-web-notifications {
        server amera-eventserver:4000;
    }

    # upstream @amera-web-notifications {
    #     server amera-web-notifications:5070;
    # }

    upstream @amera-demo-signaling {
        server amera-demo-signaling:8080;
    }

    ##########################################################################################
    # Server conf
    ##########################################################################################

    server {
        listen       9000;
        listen  [::]:9000;
        # listen  [::]:443 ssl http2 ipv6only=on; 
        # listen       443 ssl http2; 
        server_name  localhost;

        include locations.conf;
    #     return 301 https://$host$request_uri;
    }


    # server {

    #     listen  [::]:443 ssl http2 ipv6only=on; 
    #     listen       443 ssl http2; 
    #     server_name amera-web.dev;

    #     ssl_certificate /certs/dev.crt;
    #     ssl_certificate_key /certs/dev.key;

    #     include locations.conf;
    # }

    # server {
    #     listen  [::]:443 ssl http2 ipv6only=on; 
    #     listen       443 ssl http2; 
    #     server_name main.amera-web.dev;

    #     ssl_certificate /certs/dev.crt;
    #     ssl_certificate_key /certs/dev.key;

    #     include locations.conf;

    #     ##########################################################################################
    #     # Amera Main Web UI
    #     ##########################################################################################

    #     # Proxy to the flask webserver that serves up the amera website
    #     # TODO: This needs to add caching for the static pages
    #     location / {
    #         auth_request /valid-session;
    #         auth_request_set $session_id $upstream_http_x_auth_session;
    #         proxy_set_header "X-Auth-Session" $session_id;
    #         proxy_pass_request_headers      on;
    #         proxy_pass http://@amera-web-main/;

    #         proxy_redirect off;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Host $http_host;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         error_page 401 = @error401;
    #     }

    #     # Proxy to the specific pages that do not require authentication
    #     location ~ ^/(login|member/invite/register.+) {

    #         proxy_pass http://@amera-web-main/$1;

    #         proxy_redirect off;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Host $http_host;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }

    #     # Use the filesystem to serve up static assets without auth
    #     location /assets {
    #         root $root_web_main;
    #     }

    #     location /favicon.ico {
    #         root $root_web_main;
    #     }

    #     # Use the filesystem to serve up node_module static assets
    #     location /lib {
    #         rewrite /lib(.*) /$1 break;
    #         root $root_web_main/assets/node_modules;
    #     }

    # }

    server {
        listen  [::]:443 ssl http2 ipv6only=on; 
        listen       443 ssl http2; 
        server_name share.dev.amera.local;

        ssl_certificate /certs/dev.crt;
        ssl_certificate_key /certs/dev.key;

        include locations.conf;

        ##########################################################################################
        # Amera Share Web UI
        ##########################################################################################

        # Proxy to the flask webserver that serves up the amera website
        # TODO: This needs to add caching for the static pages
        location / {
            # auth_request /valid-session;
            # auth_request_set $session_id $upstream_http_x_auth_session;
            # proxy_set_header "X-Auth-Session" $session_id;
            # proxy_pass_request_headers      on;
            proxy_pass http://@amera-web-share/;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Use the filesystem to serve up static assets without auth
        # location /static {
        #     root $root_web_main;
        # }

        # # Use the filesystem to serve up node_module static assets
        # location /lib {
        #     rewrite /lib(.*) /$1 break;
        #     root $root_web_main/assets/node_modules;
        # }

    }
}
